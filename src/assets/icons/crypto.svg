var _path, _path2;
var _excluded = ["title", "titleId"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import * as React from "react";
function SvgCrypto(_ref, svgRef) {
  var title = _ref.title,
    titleId = _ref.titleId,
    props = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.9469 12.2415H12.1146C10.2899 12.2415 8.86057 9.99236 8.86057 7.12103C8.86057 4.24919 10.2899 2 12.1146 2H13.9469C15.7711 2 17.2004 4.2497 17.2004 7.12103C17.2004 9.99236 15.7711 12.2415 13.9469 12.2415ZM8.23516 15.523L13.9934 13.853C14.0884 13.9777 14.1537 14.1055 14.1415 14.1704C13.8509 14.5502 12.6355 15.3767 11.865 15.842C11.5626 16.0244 11.4641 16.4201 11.6454 16.7252C11.8261 17.0307 12.2199 17.1312 12.5206 16.9472C12.8653 16.7396 14.6098 15.6663 15.1521 14.9578C15.7531 14.171 15.2798 13.1992 14.5858 12.6282C14.4239 12.4948 14.2084 12.4489 14.0062 12.5092L7.88178 14.2854C7.31494 14.4502 6.791 14.7187 6.32579 15.0825C6.29464 15.1072 6.26604 15.1345 6.24 15.1639L1.16145 20.9282C0.927056 21.1941 0.950547 21.6012 1.21456 21.8377C1.3361 21.9464 1.48776 22 1.63841 22C1.81459 22 1.98975 21.9268 2.11588 21.7836L7.15357 16.0661C7.47938 15.8203 7.84297 15.6374 8.23516 15.523ZM22.5332 14.014C21.8615 13.5167 20.5925 13.5704 19.7387 13.8721L15.2437 15.4619C14.9116 15.5795 14.7362 15.9468 14.8525 16.2836C14.9683 16.6189 15.3309 16.7964 15.665 16.6793L20.1595 15.0895C20.7614 14.878 21.3969 14.91 21.6759 15.0049C21.6167 15.0879 21.4979 15.2133 21.2821 15.3448L15.5257 18.8483C14.9269 19.213 13.7921 19.4601 13.0979 19.3786L9.52198 18.9561C8.42589 18.8272 7.25381 19.296 6.80191 20.0512L6.22097 21.0204C6.03837 21.3253 6.13477 21.7215 6.4357 21.9066C6.53924 21.9696 6.65298 22 6.7657 22C6.98094 22 7.19158 21.8896 7.31144 21.6895L7.8929 20.7197C8.04285 20.469 8.69469 20.159 9.37407 20.2364L12.9495 20.6589C13.9232 20.7775 15.3431 20.4644 16.1832 19.9532L21.939 16.4492C22.5888 16.053 22.9755 15.5161 22.9989 14.9765C23.0152 14.5953 22.8459 14.2446 22.5332 14.014ZM15.9542 7.12103C15.9542 9.04206 15.1862 10.4633 14.3725 10.8406C15.0032 9.91558 15.3931 8.60298 15.3931 7.12103C15.3931 5.63908 15.0032 4.32648 14.3725 3.40097C15.1862 3.77879 15.9542 5.2 15.9542 7.12103ZM14.085 7.12103C14.085 4.87172 13.0492 3.30435 12.1198 3.30435C11.1904 3.30435 10.1547 4.87223 10.1547 7.12103C10.1547 9.36982 11.1904 10.9372 12.1198 10.9372C13.0492 10.9372 14.085 9.37034 14.085 7.12103Z",
    fill: "currentColor"
  })), _path2 || (_path2 = /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.1146 12.2415H13.947C15.7711 12.2415 17.2005 9.99236 17.2005 7.12103C17.2005 4.2497 15.7711 2 13.947 2H12.1146C10.29 2 8.8606 4.24919 8.8606 7.12103C8.8606 9.99236 10.29 12.2415 12.1146 12.2415ZM15.9543 7.12103C15.9543 9.04206 15.1862 10.4633 14.3726 10.8406C15.0032 9.91558 15.3932 8.60298 15.3932 7.12103C15.3932 5.63908 15.0032 4.32648 14.3726 3.40097C15.1862 3.77879 15.9543 5.2 15.9543 7.12103ZM14.085 7.12103C14.085 4.87172 13.0493 3.30435 12.1199 3.30435C11.1904 3.30435 10.1547 4.87223 10.1547 7.12103C10.1547 9.36982 11.1904 10.9372 12.1199 10.9372C13.0493 10.9372 14.085 9.37034 14.085 7.12103Z",
    fill: "#E0F64B"
  })));
}
var ForwardRef = /*#__PURE__*/React.forwardRef(SvgCrypto);
export default __webpack_public_path__ + "static/media/crypto.df730879d0ef8156e6bba59372e091b7.svg";
export { ForwardRef as ReactComponent };