var _circle, _path;
var _excluded = ["title", "titleId"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import * as React from "react";
function SvgAda(_ref, svgRef) {
  var title = _ref.title,
    titleId = _ref.titleId,
    props = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 12,
    fill: "#0033AD"
  })), _path || (_path = /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.3928 4.68414C12.5781 4.3071 12.1524 3.85053 11.8037 4.04736C11.52 4.16969 11.448 4.6141 11.6688 4.83895C11.8772 5.07323 12.2852 4.99149 12.3928 4.68414ZM8.51132 4.85047C8.53292 4.6006 8.26474 4.39053 8.05292 4.48491C7.75801 4.56995 7.7253 5.07253 8.01137 5.19246C8.22732 5.32136 8.53377 5.12172 8.51132 4.85047ZM15.735 5.20006C15.404 5.15677 15.3516 4.59348 15.6703 4.48006C15.9175 4.34958 16.1443 4.59425 16.1804 4.84787C16.1286 5.06441 15.9611 5.26268 15.735 5.20006ZM9.7114 6.77642C9.76586 6.33124 9.2605 5.9702 8.90634 6.21262C8.57466 6.39617 8.52906 6.9438 8.83004 7.18251C9.1413 7.4864 9.693 7.22596 9.7114 6.77642ZM14.3129 6.46986C14.4708 6.02917 15.1111 6.01583 15.2909 6.44482C15.4687 6.77869 15.25 7.1921 14.9333 7.30561C14.5138 7.39036 14.1153 6.89955 14.3129 6.46986ZM12 6.59373C11.6674 6.61955 11.3486 6.9018 11.352 7.2806C11.3331 7.59011 11.5374 7.84292 11.78 7.97186C11.8044 7.97344 11.8291 7.97556 11.854 7.97769L11.854 7.9777L11.854 7.9777L11.854 7.9777L11.854 7.9777L11.854 7.9777L11.854 7.9777L11.854 7.9777L11.854 7.9777L11.854 7.9777L11.854 7.9777L11.854 7.9777L11.8541 7.9777L11.8541 7.9777L11.8541 7.9777L11.8541 7.97771L11.8541 7.97771L11.8541 7.97771L11.8541 7.97771L11.8541 7.97771L11.8541 7.97771L11.8541 7.97771L11.8541 7.97771C11.9912 7.98948 12.1335 8.00171 12.2568 7.9269C12.5756 7.77436 12.7322 7.31671 12.5558 6.9843C12.4612 6.74336 12.2207 6.64164 12 6.59373ZM5.77401 7.83253C6.09754 7.6173 6.53401 8.01012 6.41155 8.39046C6.34409 8.71946 5.93546 8.85331 5.70186 8.64327C5.4525 8.44648 5.49203 7.9733 5.77401 7.83253ZM18.4468 8.24084C18.4795 7.86578 18.0265 7.6012 17.7521 7.83186C17.4704 8.01903 17.501 8.51869 17.8011 8.66466C18.0736 8.84077 18.4652 8.58283 18.4468 8.24084ZM12.9207 8.51279C13.3737 8.33668 13.9116 8.54742 14.1698 8.98449C14.5104 9.51879 14.3292 10.3324 13.8007 10.639C13.2531 11.0016 12.4535 10.6943 12.2512 10.0325C12.0216 9.44 12.3561 8.69852 12.9207 8.51279ZM11.6832 9.08553C11.4407 8.52976 10.7651 8.31462 10.2631 8.57106C9.72803 8.82967 9.48186 9.59254 9.75908 10.1542C10.0063 10.735 10.7269 10.973 11.2377 10.659C11.7479 10.3797 11.9685 9.62647 11.6832 9.08553ZM7.60201 9.55566C7.64017 9.20562 7.9453 8.97782 8.25315 8.95428C8.58483 8.99757 8.84977 9.27636 8.88586 9.63964C8.86412 9.9993 8.60732 10.3508 8.25514 10.3486C7.8677 10.3847 7.52803 9.96759 7.60201 9.55566ZM16.3943 9.63913C16.412 9.14457 15.8596 8.77981 15.4619 9.03038C15.0348 9.2483 15.0028 9.96906 15.4142 10.225C15.8103 10.5324 16.4216 10.1631 16.3943 9.63913ZM9.18154 10.8771C9.64675 10.7386 10.1787 10.9759 10.4068 11.4387C10.6568 11.9045 10.5546 12.5516 10.1664 12.8932C9.66859 13.3944 8.75043 13.1931 8.48548 12.5093C8.18097 11.8823 8.55084 11.0421 9.18154 10.8771ZM15.4489 11.3691C15.2058 10.9232 14.6745 10.7345 14.2223 10.8745C13.5868 11.0629 13.2504 11.9354 13.5848 12.5528C13.8606 13.1497 14.6371 13.3501 15.1384 12.9684C15.6169 12.6396 15.7704 11.879 15.4489 11.3691ZM6.18945 11.4563C6.59129 11.2918 7.03674 11.7718 6.87395 12.2029C6.77452 12.5957 6.26299 12.7409 5.99875 12.4513C5.68954 12.1794 5.80403 11.5743 6.18945 11.4563ZM17.6549 11.3827C17.3135 11.4026 17.0699 11.7217 17.0815 12.0821C17.1482 12.2501 17.2292 12.4255 17.3873 12.5125C17.7244 12.7137 18.2012 12.4226 18.176 11.9944C18.1977 11.6701 17.9301 11.4299 17.6549 11.3827ZM4.21363 11.6679C4.45538 11.5537 4.75443 11.7804 4.69923 12.071C4.68625 12.4 4.23745 12.5265 4.07256 12.2516C3.9269 12.0607 4.0141 11.7663 4.21363 11.6679ZM19.9679 11.8396C19.9005 11.6244 19.6273 11.5301 19.4571 11.6613C19.1738 11.8248 19.2849 12.3909 19.6281 12.357C19.8725 12.3968 20.0823 12.0747 19.9679 11.8396ZM10.4947 13.2406C11.1308 13.0615 11.8147 13.6357 11.8187 14.3446C11.8602 15.061 11.1867 15.6962 10.5355 15.5307C10.0321 15.443 9.63715 14.9183 9.65348 14.3678C9.65212 13.8413 10.0192 13.3519 10.4947 13.2406ZM14.3537 14.3535C14.364 13.6282 13.6597 13.0438 13.014 13.2391C12.6312 13.3421 12.3071 13.6835 12.2225 14.1034C12.055 14.7336 12.4977 15.447 13.0977 15.531C13.7353 15.6705 14.3878 15.0566 14.3537 14.3535ZM8.1565 13.6755C8.60332 13.593 9.02219 14.1325 8.84097 14.5916C8.70883 15.0808 8.0509 15.2136 7.76003 14.8139C7.41881 14.4301 7.67354 13.7285 8.1565 13.6755ZM16.4017 14.3574C16.4324 13.8894 15.9433 13.5164 15.5449 13.697C15.0634 13.8627 14.9831 14.6571 15.4244 14.9271C15.814 15.2278 16.4177 14.8725 16.4017 14.3574ZM17.61 15.9388C17.454 15.624 17.7374 15.2069 18.0603 15.2652C18.2121 15.2624 18.3209 15.3846 18.4192 15.4951L18.4363 15.5143L18.44 15.5462C18.4608 15.7256 18.4848 15.9314 18.3498 16.067C18.1556 16.3331 17.7156 16.2571 17.61 15.9388ZM6.44083 15.8415C6.50865 15.4596 6.07443 15.1354 5.77265 15.3528C5.48521 15.5113 5.47499 16.0066 5.75283 16.1805C6.0117 16.3721 6.40474 16.1791 6.44083 15.8415ZM11.7343 16.0596C12.1293 15.871 12.6326 16.2432 12.5952 16.7141C12.6244 17.2345 12.002 17.5948 11.6157 17.2823C11.1867 17.014 11.2582 16.2247 11.7343 16.0596ZM9.73043 17.3036C9.76106 16.8961 9.30954 16.5652 8.97306 16.7568C8.73603 16.8526 8.63937 17.1357 8.63523 17.3898C8.71626 17.6229 8.88106 17.8681 9.13377 17.874C9.4389 17.9234 9.74068 17.6382 9.73043 17.3036ZM14.5662 16.7627C14.9122 16.5312 15.404 16.8636 15.3713 17.2995C15.3801 17.755 14.8244 18.0467 14.5022 17.7475C14.1903 17.513 14.2284 16.9492 14.5662 16.7627ZM15.8161 18.7519C15.5661 18.8093 15.3849 19.113 15.5388 19.365C15.6969 19.6576 16.158 19.553 16.1873 19.2118C16.2295 18.9596 16.017 18.7961 15.8161 18.7519ZM7.81795 19.1461C7.87923 18.9464 8.0277 18.7479 8.24497 18.7998C8.56172 18.8241 8.6557 19.3408 8.37852 19.5C8.12921 19.6819 7.84003 19.4328 7.81795 19.1461ZM12.1899 19.0931C11.9569 18.9361 11.6035 19.0798 11.5428 19.3753C11.432 19.6738 11.6981 20.0347 11.9931 19.9973C12.1518 20.0017 12.2744 19.8794 12.3697 19.757C12.3883 19.6745 12.4072 19.5919 12.4283 19.5094L12.427 19.5042C12.3878 19.3469 12.3421 19.1638 12.1899 19.0931Z",
    fill: "white"
  })));
}
var ForwardRef = /*#__PURE__*/React.forwardRef(SvgAda);
export default __webpack_public_path__ + "static/media/ada.1f03164d221bd7d9511f25419505fd48.svg";
export { ForwardRef as ReactComponent };